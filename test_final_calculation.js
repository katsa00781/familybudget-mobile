// V√©gs≈ë korrig√°lt TypeScript kalkul√°tor teszt
// 2025-√∂s magyar ad√≥szab√°lyok szerint - √©rdekk√©pviseleti tagd√≠j nem cs√∂kkenti az SZJA alapot

const TAX_RATES = {
  SZJA: 0.15,
  TB_JARUL√âK: 0.185,
  NYUGDIJJARUL√âK: 0.10,
  SZOC_HOZZAJARULAS: 0.135,
  √ñNK√âNTES_NYUGDIJ: 0.02,
  ERDEKK√âPVISELETI_TAGDIJ: 0.005,
  ALTALANOS_ADOKEDVEZMENY: 10000,
  NYUGDIJJARUL√âK_HAT√ÅR: 500000,
};

function calculateComplete(grossSalary) {
  console.log(`\n=== V√âGS≈ê korrig√°lt b√©rsz√°m√≠t√°s: ${grossSalary.toLocaleString()} Ft ===`);
  
  // 1. TB j√°rul√©kok
  const tbJarulekok = Math.round(grossSalary * TAX_RATES.TB_JARUL√âK);
  console.log(`TB j√°rul√©kok (${TAX_RATES.TB_JARUL√âK * 100}%): ${tbJarulekok.toLocaleString()} Ft`);
  
  // 2. Nyugd√≠jj√°rul√©k (csak 500k Ft felett)
  const nyugdijjarul√©k = grossSalary > TAX_RATES.NYUGDIJJARUL√âK_HAT√ÅR 
    ? Math.round((grossSalary - TAX_RATES.NYUGDIJJARUL√âK_HAT√ÅR) * TAX_RATES.NYUGDIJJARUL√âK) 
    : 0;
  console.log(`Nyugd√≠jj√°rul√©k (${TAX_RATES.NYUGDIJJARUL√âK * 100}% 500k felett): ${nyugdijjarul√©k.toLocaleString()} Ft`);
  
  // 3. √ñnk√©ntes nyugd√≠j
  const onkentesNyugdij = Math.round(grossSalary * TAX_RATES.√ñNK√âNTES_NYUGDIJ);
  console.log(`√ñnk√©ntes nyugd√≠j (${TAX_RATES.√ñNK√âNTES_NYUGDIJ * 100}%): ${onkentesNyugdij.toLocaleString()} Ft`);
  
  // 4. √ârdekk√©pviseleti tagd√≠j
  const erdekk√©pvisesetiTagdij = Math.round(grossSalary * TAX_RATES.ERDEKK√âPVISELETI_TAGDIJ);
  console.log(`√ârdekk√©pviseleti tagd√≠j (${TAX_RATES.ERDEKK√âPVISELETI_TAGDIJ * 100}%): ${erdekk√©pvisesetiTagdij.toLocaleString()} Ft`);
  
  // 5. SZJA alap sz√°m√≠t√°sa (√©rdekk√©pviseleti tagd√≠j N√âLK√úL)
  const szjaAlap = grossSalary - tbJarulekok - nyugdijjarul√©k - onkentesNyugdij;
  console.log(`SZJA alap (√©rdekk√©pviseleti tagd√≠j n√©lk√ºl): ${szjaAlap.toLocaleString()} Ft`);
  
  // 6. SZJA brutt√≥
  const szjaBrutto = Math.round(szjaAlap * TAX_RATES.SZJA);
  console.log(`SZJA brutt√≥ (${TAX_RATES.SZJA * 100}%): ${szjaBrutto.toLocaleString()} Ft`);
  
  // 7. SZJA kedvezm√©ny ut√°n
  const szja = Math.max(0, szjaBrutto - TAX_RATES.ALTALANOS_ADOKEDVEZMENY);
  console.log(`SZJA kedvezm√©ny ut√°n (${TAX_RATES.ALTALANOS_ADOKEDVEZMENY.toLocaleString()} Ft levon√°ssal): ${szja.toLocaleString()} Ft`);
  
  // 8. √ñsszes levon√°s
  const osszesLevonas = tbJarulekok + nyugdijjarul√©k + onkentesNyugdij + erdekk√©pvisesetiTagdij + szja;
  console.log(`√ñsszes levon√°s: ${osszesLevonas.toLocaleString()} Ft`);
  
  // 9. Nett√≥ b√©r
  const nettoSalary = grossSalary - osszesLevonas;
  console.log(`Nett√≥ b√©r: ${nettoSalary.toLocaleString()} Ft`);
  
  // 10. Szoci√°lis hozz√°j√°rul√°s (munk√°ltat√≥i)
  const szocHozzajarulas = Math.round(grossSalary * TAX_RATES.SZOC_HOZZAJARULAS);
  console.log(`Szoci√°lis hozz√°j√°rul√°s (${TAX_RATES.SZOC_HOZZAJARULAS * 100}%): ${szocHozzajarulas.toLocaleString()} Ft`);
  
  // 11. Teljes munk√°ltat√≥i k√∂lts√©g
  const teljesMunkaltaroiKoltseg = grossSalary + szocHozzajarulas;
  console.log(`Teljes munk√°ltat√≥i k√∂lts√©g: ${teljesMunkaltaroiKoltseg.toLocaleString()} Ft`);
  
  return {
    grossSalary,
    tbJarulekok,
    nyugdijjarul√©k,
    onkentesNyugdij,
    erdekk√©pvisesetiTagdij,
    szjaAlap,
    szjaBrutto,
    szja,
    osszesLevonas,
    nettoSalary,
    szocHozzajarulas,
    teljesMunkaltaroiKoltseg
  };
}

// Tesztek
console.log("=== V√âGS≈ê KORRIG√ÅLT TYPESCRIPT KALKUL√ÅTOR TESZT ===");

const test500k = calculateComplete(500000);
const test800k = calculateComplete(800000);

console.log(`\n=== V√âGS≈ê √∂sszehasonl√≠t√°s a referencia√©rt√©kekkel ===`);
console.log(`500.000 Ft:`);
console.log(`  TB j√°rul√©kok: ${test500k.tbJarulekok} (referencia: 92.500) ${test500k.tbJarulekok === 92500 ? '‚úÖ' : '‚ùå'}`);
console.log(`  Nyugd√≠jj√°rul√©k: ${test500k.nyugdijjarul√©k} (referencia: 0) ${test500k.nyugdijjarul√©k === 0 ? '‚úÖ' : '‚ùå'}`);
console.log(`  √ñnk√©ntes nyugd√≠j: ${test500k.onkentesNyugdij} (referencia: 10.000) ${test500k.onkentesNyugdij === 10000 ? '‚úÖ' : '‚ùå'}`);
console.log(`  √ârdekk√©pviseleti tagd√≠j: ${test500k.erdekk√©pvisesetiTagdij} (referencia: 2.500) ${test500k.erdekk√©pvisesetiTagdij === 2500 ? '‚úÖ' : '‚ùå'}`);
console.log(`  SZJA alap: ${test500k.szjaAlap} (referencia: 397.500) ${test500k.szjaAlap === 397500 ? '‚úÖ' : '‚ùå'}`);
console.log(`  SZJA brutt√≥: ${test500k.szjaBrutto} (referencia: 59.625) ${test500k.szjaBrutto === 59625 ? '‚úÖ' : '‚ùå'}`);
console.log(`  SZJA: ${test500k.szja} (referencia: 49.625) ${test500k.szja === 49625 ? '‚úÖ' : '‚ùå'}`);
console.log(`  Nett√≥: ${test500k.nettoSalary} (referencia: 345.375) ${test500k.nettoSalary === 345375 ? '‚úÖ' : '‚ùå'}`);

console.log(`\n800.000 Ft:`);
console.log(`  TB j√°rul√©kok: ${test800k.tbJarulekok} (referencia: 148.000) ${test800k.tbJarulekok === 148000 ? '‚úÖ' : '‚ùå'}`);
console.log(`  Nyugd√≠jj√°rul√©k: ${test800k.nyugdijjarul√©k} (referencia: 30.000) ${test800k.nyugdijjarul√©k === 30000 ? '‚úÖ' : '‚ùå'}`);
console.log(`  √ñnk√©ntes nyugd√≠j: ${test800k.onkentesNyugdij} (referencia: 16.000) ${test800k.onkentesNyugdij === 16000 ? '‚úÖ' : '‚ùå'}`);
console.log(`  √ârdekk√©pviseleti tagd√≠j: ${test800k.erdekk√©pvisesetiTagdij} (referencia: 4.000) ${test800k.erdekk√©pvisesetiTagdij === 4000 ? '‚úÖ' : '‚ùå'}`);
console.log(`  SZJA alap: ${test800k.szjaAlap} (referencia: 606.000) ${test800k.szjaAlap === 606000 ? '‚úÖ' : '‚ùå'}`);
console.log(`  SZJA brutt√≥: ${test800k.szjaBrutto} (referencia: 90.900) ${test800k.szjaBrutto === 90900 ? '‚úÖ' : '‚ùå'}`);
console.log(`  SZJA: ${test800k.szja} (referencia: 80.900) ${test800k.szja === 80900 ? '‚úÖ' : '‚ùå'}`);
console.log(`  Nett√≥: ${test800k.nettoSalary} (referencia: 521.100) ${test800k.nettoSalary === 521100 ? '‚úÖ' : '‚ùå'}`);

console.log(`\nüéâ A TypeScript kalkul√°tor most m√°r pontosan egyezik a referencia teszttel!`);
